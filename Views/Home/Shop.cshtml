@{
    ViewData["Title"] = "Shop";
}
@model ShopViewModel


<div class="row">
    <div class="col-12 col-md-6 col-xl-2">
        <div class="row">
            <div class="d-flex justify-content-start align-items-center px-3">
                <i class="ri-filter-line me-2"></i>
                <span class="fw-bold">SEARCH FILTER</span>
           </div>
        </div>
        <form method="get" asp-action="Shop" asp-controller="Home">
        <div class="row mt-3">
            <div class="container px-3">
                <small class="fw-medium">By Category</small>
                @foreach (var category in Model.Categories)
            {
                var isChecked = Model.SelectedCategoryIds != null && Model.SelectedCategoryIds.Contains(category.Id);
                <div class="form-check mt-2">
                    <input class="form-check-input" type="checkbox" name="selectedCategoryIds" value="@category.Id" id="@category.Name" @(isChecked ? "checked" : "")>
                    <label class="form-check-label" for="@category.Name">
                        <small>@category.Name</small>
                    </label>
                </div>
            }

            </div>

            <hr class="mt-3">

            <div class="container px-3">
                <small class="fw-medium">Price Range</small>
                <div class="row mt-3">
                    <div class="col">
                        <input class="w-100 rounded" type="number" name="minPrice" min="0" placeholder="₱MIN">
                    </div>
                    -
                    <div class="col">
                        <input class="w-100 rounded" type="number" name="maxPrice" min="0" placeholder="₱MAX">
                    </div>
                </div>
                <div class="row w-100 mt-3 mx-auto">
                    <button type="submit" class="btn btn-sm bg-blue text-white">APPLY</button>
                </div>
                <div class="row w-100 mt-3 mx-auto">
                    <a href="@Url.Action("Shop", "Home")" class="btn btn-sm bg-blue text-dark">CLEAR</a>
                </div>
            </div>
            
        </div>
        </form>
    </div>

    <div class="col-12 col-md-6 col-xl-10 border">
        <!--SORT BY-->
        <div class="row">
            <div class="container px-3 py-2 rounded d-flex align-items-center" style="background-color:#ededed;">
                <small class="me-5">Sort by</small>
                <button type="button" class="btn btn-sm bg-white text-dark mx-2">Top Sales</button>
                <div class="dropdown">
                    <button class="btn btn-sm bg-white text-dark dropdown-toggle" type="button" id="priceDropdown" data-bs-toggle="dropdown" aria-expanded="false">
                        Price
                    </button>
                    <ul class="dropdown-menu" style="width: 200px;" aria-labelledby="priceDropdown">
                        <li>
                            <a class="dropdown-item" href="@Url.Action("Shop", "Home", new { sortOrder = "asc", selectedCategoryIds = Model.SelectedCategoryIds })">Low to High</a>
                        </li>
                        <li>
                            <a class="dropdown-item" href="@Url.Action("Shop", "Home", new { sortOrder = "desc", selectedCategoryIds = Model.SelectedCategoryIds })">High to Low</a>
                        </li>
                    </ul>
                </div>
            </div>
               
        </div>

       <!-- LIST OF PRODUCTS -->
        @for (int i = 0; i < Model.Products.Count(); i++)
        {
            if (i % 6 == 0)
            {
                @: <div class="row g-2 m-2 w-100"> <!-- Open a new row every 6 products -->
            }

            <div class="col-12 col-sm-6 col-md-4 col-lg-2 mb-3">

                <!-- PASS ID FROM HERE-->
                <a class="product-card text-decoration-none p-0" 
                asp-area="" asp-controller="Shop" 
                asp-action="ProductDetails" 
                asp-route-id="@Model.Products.ElementAt(i).Id">

                    <div class="card text-dark h-100">
                        <img src="~/@Model.Products.ElementAt(i).Image_url" class="card-img-top" style="object-fit: cover; height: 8rem;" alt="Product Image">
                        <div class="card-body px-2 py-0">
                            <p class="card-title text-truncate">@Model.Products.ElementAt(i).Name</p>
                            <div class="row">
                                <div class="col-9">
                                    <p>₱@Model.Products.ElementAt(i).Price</p>
                                </div>
                                <div class="col-3 text-end">
                                    <i class="home-icon ri-shopping-cart-fill text-blue"></i>
                                </div>
                            </div>
                        </div>
                    </div>
                </a>
            </div>

            @if (i % 6 == 5 || i == Model.Products.Count() - 1)
            {
                @: </div> <!-- Close the row after 6 products or the last product -->
            }
        }
    </div>

</div>

<script>
    function allowOnlyNumbers(e) {
        // Allow: backspace, delete, tab, escape, enter, and arrow keys
        if ([46, 8, 9, 27, 13, 37, 38, 39, 40].indexOf(e.keyCode) !== -1 ||
            // Allow: Ctrl+A, Ctrl+C, Ctrl+V, Command+A
            (e.keyCode === 65 && (e.ctrlKey === true || e.metaKey === true)) ||
            (e.keyCode === 67 && (e.ctrlKey === true || e.metaKey === true)) ||
            (e.keyCode === 86 && (e.ctrlKey === true || e.metaKey === true))) {
            return; 
        }

        // only numbers
        if ((e.shiftKey || (e.keyCode < 48 || e.keyCode > 57)) &&
            (e.keyCode < 96 || e.keyCode > 105)) {
            e.preventDefault();
        }
    }

   document.addEventListener('DOMContentLoaded', function () {
        const viewMoreButton = document.getElementById('viewMore');
        const moreCategories = document.getElementById('moreCategories');

        viewMoreButton.addEventListener('click', function () {
            moreCategories.classList.toggle('d-none');
            viewMoreButton.innerHTML = moreCategories.classList.contains('d-none') 
                ? `<span>More</span><i class="ri-arrow-down-s-line"></i>`
                : `<span>Less</span><i class="ri-arrow-up-s-line"></i>`;
        });
    });
</script>