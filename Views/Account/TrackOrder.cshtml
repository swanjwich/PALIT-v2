@using cce106_palit.Entity
@{
    ViewData["Title"] = "Track Order";

    int progressPercent = Model.Status_Id switch
    {
        1 => 30, 
        2 => 55,
        3 => 75, 
        4 => 100,
        _ => 0
    };

    var deliveryStart = Model.OrderDate.AddDays(2);
    var deliveryEnd = deliveryStart.AddDays(7);
}
@model cce106_palit.Entity.Order

<div class="mt-32 max-w-5xl mx-auto px-4 py-6 text-gray-800 dark:text-gray-100">
    <div class="overflow-hidden bg-white rounded-lg shadow-md dark:bg-gray-800">

        <nav class="flex items-center text-sm px-6 py-4" aria-label="Breadcrumb">
            <ol class="flex items-center whitespace-nowrap">
                <li class="inline-flex items-center">
                    <button onclick="history.back()"
                       class="cursor-pointer flex items-center text-sm text-gray-500 hover:text-[var(--color-primary)] dark:text-neutral-500 dark:hover:text-[var(--color-primary)]">
                        Orders
                    </button>
                    <svg class="shrink-0 mx-2 size-4 text-gray-400 dark:text-neutral-600"
                         xmlns="http://www.w3.org/2000/svg" width="24" height="24"
                         viewBox="0 0 24 24" fill="none" stroke="currentColor"
                         stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                        <path d="m9 18 6-6-6-6"></path>
                    </svg>
                </li>

                <li class="inline-flex items-center text-sm font-semibold text-gray-800 truncate dark:text-neutral-200"
                    aria-current="page">
                    Order #@Model.Id
                </li>
            </ol>
        </nav>

        <hr class="text-gray-200"/>

        <!-- Progress Tracking -->
        <div class="p-6">
            <div class="flex items-center justify-between mb-4 text-sm text-gray-600 dark:text-gray-300  overflow-x-auto">
                <div class="flex flex-col items-center gap-1">
                    <div class="w-10 h-10 rounded-full flex items-center justify-center @(Model.Status_Id >= 1 ? "bg-green-100 text-green-500" : "bg-gray-200 text-gray-400")">
                        <i class="ri-shopping-cart-line text-xl"></i>
                    </div>
                    <p class="text-xs flex items-center gap-1 sm:text-sm">
                        Order Placed
                        <span class="text-blue-500 cursor-pointer" title="Your order has been placed successfully.">
                            <i class="ri-question-line text-xs"></i>
                        </span>
                    </p>
                </div>
                <div class="flex flex-col items-center gap-1">
                    @{
                        var latestPayment = Model.Payments?
                        .OrderByDescending(p => p.Created_at)
                        .FirstOrDefault();

                        var isPaid = latestPayment?.Status == "Paid";
                    }
                    <div class="w-10 h-10 rounded-full flex items-center justify-center @(isPaid ? "bg-green-100 text-green-500" : "bg-gray-200 text-gray-400")">
                        <i class="ri-bank-card-line text-xl"></i>
                    </div>

                    <p class="text-xs flex items-center gap-1 sm:text-sm">
                        Payment Confirmed
                        <span class="text-blue-500 cursor-pointer" title="Your payment has been verified.">
                            <i class="ri-question-line text-xs"></i>
                        </span>
                    </p>
                </div>
                <div class="flex flex-col items-center gap-1">
                    <div class="w-10 h-10 rounded-full flex items-center justify-center @(Model.Status_Id >= 2 ? "bg-green-100 text-green-500" : "bg-gray-200 text-gray-400")">
                        <i class="ri-truck-line text-xl"></i>
                    </div>
                    <p class="text-xs flex items-center gap-1 sm:text-sm">
                        Shipped
                        <span class="text-blue-500 cursor-pointer" title="Your order has been dispatched and is on the way.">
                            <i class="ri-question-line text-xs"></i>
                        </span>
                    </p>
                </div>
                <div class="flex flex-col items-center gap-1">
                    <div class="w-10 h-10 rounded-full flex items-center justify-center @(Model.Status_Id >= 3 ? "bg-green-100 text-green-500" : "bg-gray-200 text-gray-400")">
                        <i class="ri-box-3-line text-xl"></i>
                    </div>
                    <p class="text-xs flex items-center gap-1 sm:text-sm">
                        To Receive
                        <span class="text-blue-500 cursor-pointer" title="Your order is arriving soon; please be ready to receive it.">
                            <i class="ri-question-line text-xs"></i>
                        </span>
                    </p>
                </div>
                <div class="flex flex-col items-center gap-1">
                    <div class="w-10 h-10 rounded-full flex items-center justify-center @(Model.Status_Id >= 4 ? "bg-green-100 text-green-500" : "bg-gray-200 text-gray-400")">
                        <i class="ri-checkbox-circle-line text-xl"></i>
                    </div>
                    <p class="text-xs flex items-center gap-1 sm:text-sm">
                        Order Complete
                        <span class="text-blue-500 cursor-pointer" title="Your order has been received and is complete.">
                            <i class="ri-question-line text-xs"></i>
                        </span>
                    </p>
                </div>
            </div>
            <div class="w-full bg-gray-200 dark:bg-gray-700 h-2 rounded-full">
                <div class="bg-green-500 h-2 rounded-full" style="width: @progressPercent%;"></div>
            </div>
        </div>

        <div class="p-6">
            @if (Model.Status_Id == 4)
            {
                <p class="mb-2 text-sm text-gray-600 dark:text-gray-400">
                    Your order has been successfully delivered and completed. Thank you for shopping with us!
                </p>
            }
            else
            {
                <p class="mb-2 text-sm">
                    Delivery attempt should be made between
                    <span class="font-medium text-blue-600 dark:text-blue-400">@deliveryStart.ToString("MMMM dd, yyyy")</span>
                    and
                    <span class="font-medium text-blue-600 dark:text-blue-400">@deliveryEnd.ToString("MMMM dd, yyyy")</span>.
                </p>
            }
        </div>

        <hr class="text-gray-200" />
        <div class="p-6">
            @* <span class="text-lg">Delivery Address</span> *@

            @* <div class="text-gray-500 dark:text-gray-400 mt-5"> *@
            @*     <p>@Model.Customer.Name</p> *@
            @*     <p>@Model.Customer.Contact_Number</p> *@
            @*     <p>@Model.Customer.Address</p> *@
            @* </div> *@

            <div class="mt-6 bg-white shadow-sm rounded-xl overflow-hidden">
                <div class="px-6 py-4 border-b border-gray-100">
                    <h3 class="text-xl font-semibold text-gray-800">Delivery Address</h3>
                </div>

                <div class="divide-y divide-gray-100">

                    <div class="p-6 hover:bg-gray-50 transition-colors duration-150">
                        <div class="flex flex-col md:flex-row md:items-center md:justify-between gap-4">
                            <div class="flex items-start space-x-4">
                                <div class="flex-shrink-0 p-3 bg-blue-50 rounded-lg text-blue-600">
                                    <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                        <path d="M9 17a2 2 0 11-4 0 2 2 0 014 0zM19 17a2 2 0 11-4 0 2 2 0 014 0z" />
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 16V6a1 1 0 00-1-1H4a1 1 0 00-1 1v10a1 1 0 001 1h1m8-1a1 1 0 01-1 1H9m4-1V8a1 1 0 011-1h2.586a1 1 0 01.707.293l3.414 3.414a1 1 0 01.293.707V16a1 1 0 01-1 1h-1m-6-1a1 1 0 001 1h1M5 17a2 2 0 104 0m-4 0a2 2 0 114 0m6 0a2 2 0 104 0m-4 0a2 2 0 114 0" />
                                    </svg>
                                </div>
                                <div>
                                    <h4 class="text-lg font-medium text-gray-800">@Model.Customer.Name</h4>
                                    <p class="text-sm text-gray-500 mt-1">@Model.Customer.Contact_Number • @Model.Customer.Address</p>
                                </div>
                            </div>                 
                        </div>
                    </div>
                </div>
            </div>

            @if (Model.Payments != null && Model.Payments.Any())
            {
                <div class="mt-6 bg-white shadow-sm rounded-xl overflow-hidden">
                    <div class="p-4 space-y-4">
                        @foreach (var detail in Model.OrderDetails)
                        {
                            <div class="flex items-center space-x-4">
                                <img src="~/@detail.Product.Image_url" alt="@detail.Product.Name" class="w-20 h-20 object-cover rounded-md" />
                                <div class="flex-1">
                                    <div class="text-lg font-bold">@detail.Product.Name</div>
                                    <div class="text-xs text-gray-500 dark:text-gray-400">Qty: @detail.Quantity</div>
                                </div>
                                <div class="text-sm font-semibold text-right">
                                    @((detail.Quantity * detail.Product.Price).ToString("C"))
                                </div>
                            </div>
                        }
                        <div class="flex items-center justify-end">
                            <span class="text-gray-500 text-xs">Order Total: <span class="font-bold text-xl text-[var(--color-primary)]">₱@Model.Grand_Total</span></span>
                        </div>
                    </div>


                    <div class="divide-y divide-gray-100">
                        @foreach (var payment in Model.Payments)
                        {
                            <div class="p-6 hover:bg-gray-50 transition-colors duration-150">
                                <div class="flex flex-col md:flex-row md:items-center md:justify-between gap-4">
                                    <div class="flex items-start space-x-4">
                                        <div class="flex-shrink-0 p-3 bg-blue-50 rounded-lg text-blue-600">
                                            <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
                                            </svg>
                                        </div>
                                        <div>
                                            <h4 class="text-lg font-medium text-gray-800">₱@payment.Amount.ToString("N2")</h4>
                                            <p class="text-sm text-gray-500 mt-1">@payment.Method • @payment.Created_at.ToString("MMMM dd, yyyy")</p>
                                        </div>
                                    </div>

                                    <div class="flex flex-col sm:flex-row sm:items-center sm:space-x-6 space-y-2 sm:space-y-0">
                                        <div>
                                            <span class="inline-flex items-center px-3 py-1 rounded-full text-sm font-medium
                                    @(payment.Status == "Completed" ? "bg-green-100 text-green-800" :
                                      payment.Status == "Pending" ? "bg-yellow-100 text-yellow-800" :
                                      "bg-blue-100 text-blue-800")">
                                                @payment.Status
                                            </span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            }
            else
            {
                <div class="mt-8 text-center">
                    <svg xmlns="http://www.w3.org/2000/svg" class="mx-auto h-12 w-12 text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
                    </svg>
                    <h3 class="mt-2 text-lg font-medium text-gray-700">No payment history</h3>
                    <p class="mt-1 text-gray-500">Your payment details will appear here once available.</p>
                </div>
            }



        </div>

    </div>

</div>