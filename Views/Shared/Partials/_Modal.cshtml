<div id="custom-modal" class="hidden fixed z-50 inset-0 overflow-y-auto bg-black bg-black/50 transition-opacity duration-300">
    <div class="flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0">

        <span class="hidden sm:inline-block sm:align-middle sm:h-screen" aria-hidden="true">&#8203;</span>

        <div id="modal-content" class="inline-block align-bottom bg-white rounded-lg px-4 pt-5 pb-4 text-left shadow-xl transform transition-all duration-300 scale-95 opacity-0 sm:my-8 sm:align-middle sm:max-w-lg sm:w-full sm:p-6"
             role="dialog" aria-modal="true" aria-labelledby="modal-headline">

            <!-- Close button -->
            <div class="hidden sm:block absolute top-0 right-0 pt-4 pr-4">
                <button type="button" data-behavior="cancel" class="text-gray-400 hover:text-gray-500 focus:outline-none">
                    <svg class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
                    </svg>
                </button>
            </div>

            <!-- Icon and title -->
            <div class="sm:flex sm:items-start">
                <div class="mx-auto flex-shrink-0 flex items-center justify-center h-12 w-12 rounded-full bg-red-100 sm:mx-0 sm:h-10 sm:w-10">
                    <svg class="h-6 w-6 text-red-600" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                              d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z" />
                    </svg>
                </div>
                <div class="mt-3 text-center sm:mt-0 sm:ml-4 sm:text-left">
                    <h3 id="modal-title" class="text-lg leading-6 font-medium text-gray-900">Confirm Action</h3>
                    <div class="mt-2">
                        <p id="modal-message" class="text-sm text-gray-500">This action cannot be undone.</p>
                    </div>
                </div>
            </div>

            <!-- Action buttons -->
            <div class="mt-5 sm:mt-4 sm:flex sm:flex-row-reverse">
                <button id="modal-confirm-btn" class="cursor-pointer w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 bg-red-600 text-white hover:bg-red-700 sm:ml-3 sm:w-auto sm:text-sm">
                    Confirm
                </button>
                <button data-behavior="cancel" class="cursor-pointer mt-3 w-full inline-flex justify-center rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white text-gray-700 hover:text-gray-500 sm:mt-0 sm:w-auto sm:text-sm">
                    Cancel
                </button>
            </div>
        </div>
    </div>
    <script>
        const modal = document.getElementById('custom-modal');
        const titleEl = document.getElementById('modal-title');
        const messageEl = document.getElementById('modal-message');
        const confirmBtn = document.getElementById('modal-confirm-btn');

        function openModal({ title, message, onConfirm, confirmText }) {
            const content = document.getElementById('modal-content');
            titleEl.textContent = title || 'Are you sure?';
            messageEl.textContent = message || 'This action cannot be undone.';
            modal.classList.remove('hidden');

            requestAnimationFrame(() => {
                content.classList.remove('scale-95', 'opacity-0');
                content.classList.add('scale-100', 'opacity-100');
            });

            const newConfirmBtn = confirmBtn.cloneNode(true);
            newConfirmBtn.textContent = confirmText || 'Confirm';

            confirmBtn.parentNode.replaceChild(newConfirmBtn, confirmBtn);
            attachCancelEvents();

            newConfirmBtn.addEventListener('click', () => {
                if (typeof onConfirm === 'function') onConfirm();
                closeModal();
            });
        }

        function closeModal() {
            const content = document.getElementById('modal-content');
            content.classList.add('scale-95', 'opacity-0');
            content.classList.remove('scale-100', 'opacity-100');

            setTimeout(() => {
                modal.classList.add('hidden');
            }, 300);
        }


        function attachCancelEvents() {
            document.querySelectorAll('[data-behavior="cancel"]').forEach(btn => {
                btn.addEventListener('click', closeModal);
            });
        }

        attachCancelEvents();
    </script>
</div>
