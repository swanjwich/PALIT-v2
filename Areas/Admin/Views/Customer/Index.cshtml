@model X.PagedList.IPagedList<Customer>
@using X.PagedList.Mvc.Core
@using cce106_palit.Entity
@{
    ViewData["Title"] = "Customers";
}

<div class="py-4 mt-16 sm:mt-8 space-y-6">
    <div class="bg-white dark:bg-gray-800 rounded-xl shadow-md overflow-hidden">
        <div class="px-6 py-4 border-b border-gray-200 dark:border-gray-700 flex items-center justify-between">
            <h1 class="text-2xl font-semibold text-gray-900 dark:text-white">
                @ViewData["Title"]
            </h1>

            <div class="relative max-w-md">
                <form method="get" action="@Url.Action("Index", "Customer")" class="flex items-center">
                    <div class="relative flex-grow">
                        <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-gray-400 dark:text-gray-500" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" />
                            </svg>
                        </div>

                        <input type="text"
                               name="searchTerm"
                               id="customerSearch"
                               value="@ViewBag.SearchTerm"
                               placeholder="Search customer..."
                               class="block w-full pl-10 pr-12 py-2.5 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-800 text-sm text-gray-800 dark:text-gray-200 placeholder-gray-400 dark:placeholder-gray-500 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-all duration-200"
                               aria-label="Search customers">
                    </div>
                </form>
            </div>

        </div>

        @if (Model.Any())
        {
        <div class="overflow-x-auto">
            <div class="w-full table-auto hidden sm:table text-sm text-left text-gray-800 dark:text-gray-100">
                <div class="table-header-group bg-gray-100 dark:bg-gray-700 text-gray-700 dark:text-gray-300">
                    <div class="table-row">
                        <div class="table-cell px-4 py-2 font-semibold">ID</div>
                        <div class="table-cell px-4 py-2 font-semibold">Username</div>
                        <div class="table-cell px-4 py-2 font-semibold">Name</div>
                        <div class="table-cell px-4 py-2 font-semibold">Address</div>
                        <div class="table-cell px-4 py-2 font-semibold">Email</div>
                        <div class="table-cell px-4 py-2 font-semibold">Details</div>
                    </div>
                </div>

                @foreach (var customer in Model)
                {
                    <div class="table-row border-t border-gray-200 dark:border-gray-700">
                        <div class="table-cell px-4 py-3">@customer.Id</div>
                        <div class="table-cell px-4 py-3">@customer.Username</div>
                        <div class="table-cell px-4 py-3">@customer.Name</div>
                        <div class="table-cell px-4 py-3">@customer.Address</div>
                        <div class="table-cell px-4 py-3">@customer.Email</div>
                        <div class="table-cell px-4 py-3">
                            <a class="text-blue-600 hover:underline" href="@Url.Action("Details", new { customerId = customer.Id })">View</a>
                        </div>
                    </div>
                }
            </div>

            <!-- Mobile Cards -->
            <div class="sm:hidden space-y-4 p-4">
                @foreach (var customer in Model)
                {
                    <div class="bg-gray-50 dark:bg-gray-700 p-4 rounded-lg shadow-sm border border-gray-200 dark:border-gray-600">
                        <div class="text-sm text-gray-600 dark:text-gray-300"><strong>ID:</strong> @customer.Id</div>
                        <div class="text-sm text-gray-600 dark:text-gray-300"><strong>Username:</strong> @customer.Username</div>
                        <div class="text-sm text-gray-600 dark:text-gray-300"><strong>Name:</strong>@customer.Name</div>
                        <div class="text-sm text-gray-600 dark:text-gray-300"><strong>Address:</strong>@customer.Address</div>
                        <div class="text-sm text-gray-600 dark:text-gray-300"><strong>Email:</strong> @customer.Email</div>
                        <div class="mt-2">
                            <a class="text-blue-600 hover:underline text-sm" href="@Url.Action("Details", new { customerId = customer.Id })">View Details</a>
                        </div>
                    </div>
                }
            </div>
        </div>
        }
        else
        {
            <div class="table w-full">
                <div class="table-row">
                    <div class="table-cell py-10 text-center text-gray-500 dark:text-gray-400" colspan="6">
                        No customers found.
                    </div>
                </div>
            </div>

        }
        <div class="py-4 flex justify-center sm:justify-center overflow-x-auto">
            @Html.PagedListPager(Model, page => Url.Action("Index", new { page }), new PagedListRenderOptions
           {
               LiElementClasses = new[] { "mx-1" },
               PageClasses = new[] {
                "block min-w-[36px] text-center px-3 py-1 rounded border border-gray-300 hover:bg-[var(--hover)] hover:text-white dark:border-gray-600 dark:hover:bg-gray-600"
                },
               UlElementClasses = new[] {
                "flex flex-wrap justify-center gap-2 sm:gap-1"
                },
               ActiveLiElementClass = "bg-[var(--color-primary)] hover:bg-[var(--hover)] text-white rounded cursor-pointer"
           })
        </div>
    </div>
</div>
