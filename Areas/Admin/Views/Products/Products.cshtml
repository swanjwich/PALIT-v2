@model X.PagedList.IPagedList<it15_palit.Entity.Product>
@using X.PagedList.Mvc.Core;

@{
    ViewData["Title"] = "Products";
    ViewData["Header"] = "Products";

}
@if (TempData["Message"] != null)
{
    <div class="toast align-items-center bg-blue border-0 position-fixed top-0 end-0" style="margin-top: 3rem;" role="alert" aria-live="assertive" aria-atomic="true" id="toast">
        <div class="d-flex">
            <div class="toast-body text-white">
                @TempData["Message"]
            </div>
            <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
        </div>
    </div>
}
<div class="content py-4">
    <div class="row g-3">
        <div class="col-12">
            <div class="card border-0 shadow-sm h-100">
                <div class="card-header bg-white">
                    <div class="row g-0">
                        <div class="col-12 col-md-12 col-xl-12 text-end align-items-center">
                            <div class="d-flex justify-content-end h-100">
                                <button class="btn bg-blue text-white border-0 rounded d-flex justify-content-center align-items-center"
                                        title="Create new product" data-bs-toggle="modal" data-bs-target="#createProductModal">
                                    <i class="ri-add-circle-line"></i>
                                    <span class="ms-1 d-sm-block d-none">Create new product</span>
                                </button>

                            </div>
                        </div>
                    </div>
                </div>

                <div class="card-body">
                    <div class="table-responsive mt-3 w-100">
                        <table class="table table-hover" id="productsTable">
                            <thead>
                                <tr>
                                    <th>ID</th>
                                    <th></th>
                                    <th>Name</th>
                                    <th>Description</th>
                                    <th>Price</th>
                                    <th>Stock</th>
                                    <th>Category</th>
                                    <th>Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var product in Model)
                                {
                                    <tr>
                                        <td>@product.Id</td>
                                        <td><img src="~/@product.Image_url" width="90" height="90" /></td>
                                        <td>@product.Name</td>
                                        <td>@product.Description</td>
                                        <td>@product.Price</td>
                                        <td>@product.Stock_quantity</td>
                                        <td>@(product.Category != null ? product.Category.Name : "No Category")</td>
                                        <td>
                                            <div class="d-flex justify-content-between">
                                                <button class="btn btn-sm btn-primary me-2 edit-product"
                                                        data-bs-toggle="modal"
                                                        data-bs-target="#editProductModal"
                                                        data-id="@product.Id"
                                                        data-name="@product.Name"
                                                        data-description="@product.Description"
                                                        data-price="@product.Price"
                                                        data-stock="@product.Stock_quantity"
                                                        data-category="@product.Category_id">
                                                    <i class="ri-edit-line"></i>
                                                </button>
                                                <form method="post" action="@Url.Action("Delete", "Products")" style="display:inline;" onsubmit="return confirmDelete();">
                                                    <input type="hidden" name="id" value="@product.Id" />
                                                    <button type="submit" class="btn btn-sm btn-danger" title="Delete">
                                                        <i class="ri-delete-bin-line"></i>
                                                    </button>
                                                </form>
                                            </div>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>

                <div class="pagination-wrapper mt-3 d-flex justify-content-center">
                    @Html.PagedListPager(Model, page => Url.Action("Products", new { page }), new PagedListRenderOptions
               {
                   LiElementClasses = new[] { "page-item" },
                   PageClasses = new[] { "page-link" },
                   UlElementClasses = new[] { "pagination" }
               })
                </div>
            </div>
        </div>
    </div>
</div>
@{
    Html.RenderPartial("Create.cshtml");
    Html.RenderPartial("Edit.cshtml");
}

<script>
    $(document).ready(function() {
        $('.edit-product').on('click', function() {
            var productId = $(this).data('id');
            var productName = $(this).data('name');
            var productDescription = $(this).data('description');
            var productPrice = $(this).data('price');
            var productStock = $(this).data('stock');
            var productCategory = $(this).data('category');
            var productImage = $(this).closest('tr').find('img').attr('src');


            console.log("ID:", productId);
            console.log("Name:", productName);
            console.log("Description:", productDescription);
            console.log("Price:", productPrice);
            console.log("Stock:", productStock);
            console.log("Category:", productCategory);

            $('#editProductId').val(productId);
            $('#editProductName').val(productName);
            $('#editProductDescription').val(productDescription);
            $('#editProductPrice').val(productPrice);
            $('#editProductStock').val(productStock);
            $('#editProductCategory').val(productCategory);
            $('#currentImage').attr('src', productImage);

        });
    });

    function confirmDelete() {
        return confirm("Are you sure you want to delete this product?");
    }
</script>